<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" total="3" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="866" started-at="2019-04-09T10:15:28Z" finished-at="2019-04-09T10:15:29Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="866" started-at="2019-04-09T10:15:28Z" finished-at="2019-04-09T10:15:29Z">
      <class name="com.test.testExtentReports">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.test.testExtentReports@7cf10a6f]" name="beforeTest" is-config="true" duration-ms="308" started-at="2019-04-09T15:45:28Z" finished-at="2019-04-09T15:45:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="testFail()[pri:0, instance:com.test.testExtentReports@7cf10a6f]" name="testFail" duration-ms="15" started-at="2019-04-09T15:45:28Z" finished-at="2019-04-09T15:45:28Z">
          <exception class="junit.framework.AssertionFailedError">
            <full-stacktrace>
              <![CDATA[junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:48)
	at junit.framework.Assert.assertTrue(Assert.java:20)
	at junit.framework.Assert.assertTrue(Assert.java:27)
	at com.test.testExtentReports.testFail(testExtentReports.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFail -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.test.testExtentReports@7cf10a6f]" name="afterMethod" is-config="true" duration-ms="30" started-at="2019-04-09T15:45:28Z" finished-at="2019-04-09T15:45:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFail status=FAILURE method=testExtentReports.testFail()[pri:0, instance:com.test.testExtentReports@7cf10a6f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="testPass()[pri:0, instance:com.test.testExtentReports@7cf10a6f]" name="testPass" duration-ms="1" started-at="2019-04-09T15:45:28Z" finished-at="2019-04-09T15:45:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPass -->
        <test-method status="SKIP" signature="testSkip()[pri:0, instance:com.test.testExtentReports@7cf10a6f]" name="testSkip" duration-ms="3" started-at="2019-04-09T15:45:28Z" finished-at="2019-04-09T15:45:28Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[This test is skipped]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: This test is skipped
	at com.test.testExtentReports.testSkip(testExtentReports.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSkip -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.test.testExtentReports@7cf10a6f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-04-09T15:45:28Z" finished-at="2019-04-09T15:45:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPass status=SUCCESS method=testExtentReports.testPass()[pri:0, instance:com.test.testExtentReports@7cf10a6f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.test.testExtentReports@7cf10a6f]" name="afterMethod" is-config="true" duration-ms="1" started-at="2019-04-09T15:45:28Z" finished-at="2019-04-09T15:45:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSkip status=SKIP method=testExtentReports.testSkip()[pri:0, instance:com.test.testExtentReports@7cf10a6f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.test.testExtentReports@7cf10a6f]" name="afterTest" is-config="true" duration-ms="486" started-at="2019-04-09T15:45:28Z" finished-at="2019-04-09T15:45:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.test.testExtentReports -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
